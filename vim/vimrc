"---------------------------------------------------------------------------
" System variables
"---------------------------------------------------------------------------
let hostname = substitute(system('hostname'), '\n', '', '')

"---------------------------------------------------------------------------
" Dein plugin manager installation
"---------------------------------------------------------------------------
if &compatible
  set nocompatible
endif
set runtimepath+=~/.vim/bundles/repos/github.com/Shougo/dein.vim
" let g:dein#types#git#default_protocol="ssh"
if dein#load_state('~/.vim/bundles')
  call dein#begin('~/.vim/bundles')
  call dein#add('~/.vim/bundles/repos/github.com/Shougo/dein.vim')
  call dein#add('Shougo/deoplete.nvim')
  if !has('nvim')
    call dein#add('roxma/nvim-yarp')
    call dein#add('roxma/vim-hug-neovim-rpc')
  endif
  call dein#add('Shougo/vimproc.vim')
  " NerdTree
  call dein#add('scrooloose/nerdtree')
  " EasyMotion
  call dein#add('Lokaltog/vim-easymotion')
  " NerdCommenter
  call dein#add('scrooloose/nerdcommenter')
  " tagbar
  call dein#add('majutsushi/tagbar')
  " Tabular
  call dein#add('godlygeek/tabular')
  " Vim airline
  call dein#add('bling/vim-airline')
  " Vim bufferline
  call dein#add('bling/vim-bufferline')
  " Color schemems
  call dein#add('flazz/vim-colorschemes')
  " Local vimrc
  call dein#add('embear/vim-localvimrc')
  "Indent Guides
  call dein#add('nathanaelkane/vim-indent-guides')
  " Ctrlp
  call dein#add('ctrlpvim/ctrlp.vim')
  " FastFold
  call dein#add('Konfekt/FastFold')
  " SimplylFold
  call dein#add('tmhedberg/SimpylFold')
  " YouCompleteMe
  " call dein#add('ycm-core/YouCompleteMe', {'merged': 0})
  call dein#end()
  call dein#save_state()
endif

"---------------------------------------------------------------------------
" General Settings
"---------------------------------------------------------------------------
filetype on             " Enable filetype detection
filetype indent on      " Enable filetype-specific indenting
filetype plugin on      " Enable filetype-specific plugins
set bs=2                " allow backspacing over everything in insert mode
set ruler               " show the cursor position all the time
set autoread            " auto read when file is changed from outside
syntax on               " syntax highlight
set hlsearch            " search highlighting
set autoindent          " auto indentation
set incsearch           " incremental search
set nobackup            " no *~ backup files
set copyindent          " copy the previous indentation on autoindenting
set ignorecase          " ignore case when searching
set smartcase           " ignore case if search pattern is all lowercase,case-sensitive otherwise
set smarttab            " insert tabs on the start of a line according to context
set t_Co=256            " Set color to 256
set relativenumber      " Turn on relative and absolute number at the same time.
set number              "
set cursorline
" disable sound on errors
set noerrorbells
set novisualbell
set t_vb=
set tm=500

"---------------------------------------------------------------------------
" LANGUAGE SPECIFIC Settings
"---------------------------------------------------------------------------
" --- General {
set expandtab        "replace <TAB> with spaces
set softtabstop=2
set shiftwidth=2

"folding settings
set foldmethod=syntax   "fold based on syntax
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use
"}
"
" --- Python {
autocmd FileType python,pyrex setlocal tabstop=4
autocmd FileType python,pyrex setlocal softtabstop=4
autocmd FileType python,pyrex setlocal shiftwidth=4
autocmd FileType python,pyrex highlight ColorColumn ctermbg=7
"autocmd FileType python,pyrex setlocal colorcolumn=81
" }
" --- Makefile {
autocmd FileType Makefile set noexpandtab
" }

" --- CTAGS {
nmap <silent><F1> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q . && cscope -bR<CR>
nmap <silent><F2> :!ctags -R .<CR>
"  }
"
"---------------------------------------------------------------------------
" USEFUL SHORTCUTS
"---------------------------------------------------------------------------
" set leader to ,
let mapleader=","
let g:mapleader=","

"replace the current word in all opened buffers
map <leader>r :call Replace()<CR>
" open the error console
map <leader>co :botright cope<CR>
" move to next error
map <leader>cx :cn<CR>
" move to the prev error
map <leader>cp :cp<CR>

" move around tabs. conflict with the original screen top/bottom
" comment them out if you want the original H/L
" go to prev tab
map <S-H> gT
" go to next tab
map <S-L> gt
" new tab
map <C-t><C-r> :tablast<CR>
" new tab
map <C-t><C-t> :tabnew<CR>
" close tab
map <C-t><C-w> :tabclose<CR>
" turn off search highlighting
map <C-l> :nohl<CR>
" toggles paste mode
nmap <leader>p :set paste!<BAR>set paste?<CR>

" allow multiple indentation/deindentation in visual mode
vnoremap < <gv
vnoremap > >gv

" :cd. change working directory to that of the current file
cmap cd. lcd %:p:h

" Save file (This require disabling terimal's CTRL-S interpretation.)
map <C-s> <esc>:w<CR>
imap <C-s> <esc>:w<CR>

"---------------------------------------------------------------------------
" ENCODING SETTINGS
"---------------------------------------------------------------------------
set encoding=utf-8
set termencoding=utf-8
set fileencoding=utf-8
set fileencodings=ucs-bom,utf-8,big5,gb2312,latin1

"---------------------------------------------------------------------------
" Plugin SETTINGS
"---------------------------------------------------------------------------
"--- NerdTree {
map <C-d> :NERDTreeToggle<CR>
" }
"--- Airline {
"Enable the list of buffers
let g:airline#extensions#tabline#enabled = 1
" Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'
let g:airline#extensions#tabline#tab_nr_type = 1 " tab number
let g:airline#extensions#tabline#show_tab_nr = 1
let g:airline#extensions#bufferline#enabled = 1
let g:airline#extensions#tabline#buffer_nr_show = 1
let g:airline#extensions#bufferline#overwrite_variables = 1
set laststatus=2
" }
" --- TagBar {
" toggle TagBar with F7
nnoremap <silent> <F7> :TagbarToggle<CR>
" set focus to TagBar when opening it
let g:tagbar_autofocus = 1
" }
" --- Unite {
" let g:unite_source_history_yank_enable = 1
" nnoremap <C-y> :Unite history/yank<cr>
if executable('ack-grep')
    let g:unite_source_grep_command = 'ack-grep'
    let g:unite_source_grep_default_opts = '-i --no-heading --no-color -k -H'
    let g:unite_source_grep_recursive_opt = ''
endif
nnoremap <leader>jF :Unite -start-insert file_rec<CR>
nnoremap <leader>jf :Unite -start-insert file_rec/git<CR>
nnoremap <leader>jg :Unite grep:.<CR>
nnoremap <leader>jb :Unite -quick-match -start-insert buffer<CR>
" }
"  --- YouCompleteMe {
let g:ycm_confirm_extra_conf = 1
let g:ycm_autoclose_preview_window_after_completion = 0
let g:ycm_autoclose_preview_window_after_insertion = 1
nnoremap <leader>jd ::YcmCompleter GoToDefinitionElseDeclaration<CR>
" }
" --- Local vimrc {
let g:localvimrc_ask = 0
"  }
" --- Ctrlp {
let g:ctrlp_map = '<c-p>'
" let g:ctrlp_cmd = 'CtrlPMixed'
let g:ctrlp_cmd = 'CtrlPMRU'
nmap <leader>t :CtrlP<CR>
let g:ctrlp_custom_ignore = {
  \ 'dir': '\.git$\|\.hg$\|\.svn$\|\.yardoc$\|build$',
  \ 'file': '\.exe$\|\.so$\|\.dat$\|\.o$\|\.d$'
  \ }
"  }

"---------------------------------------------------------------------------
" Misc
"---------------------------------------------------------------------------
" Color Scheme
set history=1000
set background=dark
silent! let vcflag = dein#check_install(['vim-colorschemes'])
if !vcflag
    colorscheme candy
endif
